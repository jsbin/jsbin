{
  "getBin": "SELECT * FROM `sandbox` WHERE `url`=? AND `revision` BETWEEN ? AND ? + 1 ORDER BY `revision`",
  "getLatestBin": "SELECT * FROM `sandbox` WHERE `url`=? ORDER BY `revision` DESC LIMIT 1",
  "setBin": "INSERT INTO `sandbox` (`javascript`, `css`, `html`, `created`, `last_viewed`, `url`, `revision`, `streaming_key`, `settings`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
  "setBinPanel": "UPDATE `sandbox` SET `:panel`=?, `settings`=?, `created`=? WHERE `url`=? AND `revision`=? AND `streaming_key`=? AND `streaming_key`!='' AND `active`='y'",
  "binExists": "SELECT id FROM `sandbox` WHERE `url`=? LIMIT 1",
  "getUser": "SELECT * FROM `ownership` WHERE `name`=? LIMIT 1",
  "getUserByGithubId": "SELECT * FROM `ownership` WHERE `github_id`=? LIMIT 1",
  "getUserByApiKey": "SELECT * FROM `ownership` WHERE `api_key`=? LIMIT 1",
  "getByEmail": "SELECT * FROM `ownership` WHERE `email`=? LIMIT 1",
  "setUser": "INSERT INTO `ownership` (`name`, `key`, `email`, `last_login`, `created`, `updated`, `github_token`, `github_id`, `flagged`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
  "touchLogin": "UPDATE `ownership` SET `last_login`=? WHERE `name`=?",
  "updateUserKey": "UPDATE ownership SET `key`=?, `updated`=? WHERE `name`=?",
  "updateUserSettings": "UPDATE ownership SET `settings`=? WHERE `name`=?",
  "upgradeUserKey": "UPDATE ownership SET `key`=?, `created`=?, `updated`=? WHERE `name`=?",
  "DATELIMITgetBinsByUser": "SELECT SUBSTR(s.html, 1, 200) as html, SUBSTR(s.javascript, 1, 100) as javascript, SUBSTR(s.css, 1, 100) as css, o.archive, o.last_updated, o.url, o.revision FROM `owners` as o, `sandbox` s WHERE o.url=s.url and o.revision=s.revision and o.last_updated>DATE_SUB(NOW(), INTERVAL 6 MONTH) AND o.name=?",
  "getBinsByUser": "select summary as html, summary as javascript, summary as css, archive, last_updated, url, revision from `owners` where name=?",
  "LIMITgetBinsByUser": "SELECT SUBSTR(s.html, 1, 200) as html, SUBSTR(s.javascript, 1, 100) as javascript, SUBSTR(s.css, 1, 100) as css, o.archive, o.last_updated, o.url, o.revision FROM `owners` as o, `sandbox` s WHERE o.url=s.url and o.revision=s.revision AND o.name=? ORDER BY o.last_updated LIMIT 500",
  "OLDDgetBinsByUser": "SELECT *, `last_updated` as `created` FROM `owners` WHERE `name`=?",
  "getAllOwners": "SELECT * FROM `owners`",
  "getOwnersBlock": "SELECT * FROM `owners` LIMIT ?, ?",
  "getBinByUrlAndRevision": "SELECT * FROM `sandbox` WHERE `url`=? AND `revision`=? LIMIT 1",
  "getLatestBinForUser": "SELECT `url`, `revision` FROM `owners` WHERE `name`=? AND `last_updated` != 0 AND `archive` = 0 ORDER BY `last_updated` DESC LIMIT ?,1",
  "setBinOwner": "INSERT INTO `owners` (`name`, `url`, `revision`, `last_updated`, `summary`, `html`, `css`, `javascript`, `visibility`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
  "touchOwners": "UPDATE `owners` SET `last_updated`=? WHERE `name`=? AND `url`=? AND `revision` = ?",
  "updateOwners": "UPDATE `owners` SET `last_updated`=?, `summary`=?, `:panel`=? WHERE `name`=? AND `url`=? AND `revision` = ?",
  "populateOwners": "UPDATE `owners` SET `last_updated`=?, `summary`=?, `html`=?, `css`=?, `javascript`=? WHERE `name`=? AND `url`=? AND `revision` = ?",
  "archiveBin": "UPDATE `owners` SET `archive`=? WHERE `name`=? AND `url`=? AND `revision` = ?",
  "updateUserEmail": "UPDATE ownership SET `email`=?, `updated`=? WHERE `name`=?",
  "updateUserGithubData": "UPDATE ownership SET `github_id`=?, `github_token`=?, `updated`=? WHERE `name`=?",
  "updateUserDropboxData":"UPDATE ownership SET `dropbox_token`=?, `updated`=? WHERE `name`=?",
  "getUserByEmail": "SELECT * FROM `ownership` WHERE `email`=? LIMIT 1",
  "getUserForForgotToken": "SELECT `ownership`.*, expires FROM `ownership` INNER JOIN `forgot_tokens` ON `name` = `owner_name` WHERE `token` = ? AND `forgot_tokens`.`expires` >= ?",
  "setForgotToken": "INSERT INTO `forgot_tokens` (`owner_name`, `token`, `expires`, `created`) VALUES (?, ?, ?, ?)",
  "deleteExpiredForgotToken": "DELETE FROM `forgot_tokens` WHERE `expires` <= ? OR `token`=? OR `owner_name`=?",
  "reportBin": "UPDATE `sandbox` SET `reported`=?, `active`='n' WHERE `url`=? AND `revision`=? AND `reported` IS NULL",
  "updateBinData": "UPDATE `sandbox` SET `:field`=? WHERE `url`=? AND `revision`=?",
  "updateOwnersData": "UPDATE `owners` SET `:field`=? WHERE `url`=? AND `revision`=?",
  "updateOwnershipData": "UPDATE `ownership` SET `:field`=? WHERE `name`=?",
  "isOwnerOf": "SELECT name=? as `owner`, s.active FROM `owners` AS `o`, `sandbox` AS `s` WHERE o.url=s.url AND o.revision=s.revision AND o.url=? AND o.revision=1",
  "getUserBinCount": "SELECT COUNT(*) as total FROM `owners` WHERE `name`=? AND archive=0",
  "setProAccount": "UPDATE ownership SET `pro`=?, `updated`=? WHERE `name`=?",
  "setCustomer" : "REPLACE INTO `customers` (`stripe_id`, `user_id`, `name`, `plan`) VALUES (?, ?, ?, ?)",
  "setCustomerActive": "UPDATE `customers` SET `active`=? WHERE `name`=?",
  "getCustomerByStripeId": "SELECT * FROM `customers` WHERE `stripe_id`=? LIMIT 1",
  "getCustomerByUser": "SELECT * FROM `customers` WHERE `name`=? LIMIT 1",
  "setBinVisibility": "UPDATE `owners` SET `visibility`=? WHERE `name`=? AND `url`=?",
  "getBinMetadata": "SELECT * FROM `owners` AS `o`, `ownership` AS `os` WHERE o.name=os.name AND o.url=? AND o.revision=?",
  "setProAccount": "UPDATE ownership SET `pro`=?, `updated`=? WHERE `name`=?",
  "saveBookmark": "INSERT INTO owner_bookmarks (`name`, `url`, `revision`, `type`, `created`) VALUES (?,?,?,?,?)",
  "getBookmark": "SELECT * FROM owner_bookmarks WHERE `name`=? AND `type`=? ORDER BY `created` DESC",
  "getAssetsForUser": "SELECT * FROM assets WHERE `username`=?",
  "deleteAsset": "DELETE FROM assets WHERE `asset_url`=? AND `username`=?",
  "saveAsset": "INSERT INTO assets (`username`, `asset_url`, `size`, `mime`) VALUES (?,?,?,?)",
  "userListing": "SELECT s.url, s.revision, s.created, s.settings FROM `owners` AS `o`, `sandbox` AS `s` WHERE o.name=? AND s.revision=o.revision AND s.url=o.url",
  "deleteUser": "DELETE FROM ownership, owners, sandbox USING ownership INNER JOIN owners INNER JOIN sandbox WHERE ownership.name = ? AND ownership.name = owners.name AND owners.url = sandbox.url AND owners.revision = sandbox.revision",
  "sandboxColumns": [
    "created",
    "last_viewed",
    "url",
    "active",
    "reported",
    "streaming",
    "streaming_key",
    "streaming_read_key",
    "active_tab",
    "active_cursor",
    "//protected revision",
    "css",
    "settings"
  ],
  "ownersColumns": [
    "name",
    "url",
    "//protected revision",
    "last_updated",
    "summary",
    "html",
    "css",
    "javascript",
    "archive",
    "visibility"
  ],
  "ownershipColumns": [
    "// protected name",
    "key",
    "email",
    "api_key",
    "github_token",
    "github_id",
    "last_login",
    "created",
    "updated",
    "pro",
    "settings",
    "embed",
    "// protected id",
    "dropbox_token",
    "domain",
    "verified",
    "dropbox_id",
    "beta",
    "flagged",
    "last_seen"
  ]
}
